version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: hardware_store_db
    environment:
      POSTGRES_DB: hardware_store
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hardware_store_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hardware_store"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: hardware_store_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hardware_store
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - hardware_store_network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hardware_store_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - hardware_store_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  hardware_store_network:
    driver: bridge